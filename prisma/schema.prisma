// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @default(uuid())
  username         String          @unique
  email            String          @unique
  password         String
  name             String?
  bio              String?
  joinedAt         DateTime        @default(now())
  lastOnline       DateTime        @default(now())
  profileImg       String?
  coverImg         String?
  posts            Post[]          @relation("author")
  likes            Post[]          @relation("likes")
  comments         Comment[]
  friends          User[]          @relation("friends")
  symmetricFriends User[]          @relation("friends")
  requests         FriendRequest[] @relation("to")
  outgoingRequests FriendRequest[] @relation("from")

  @@index([username])
}

model Post {
  id        String    @id @default(uuid())
  post      String?
  postImg   String?
  author    User      @relation("author", fields: [authorId], references: [id])
  authorId  String
  likedBy   User[]    @relation("likes")
  createdAt DateTime  @default(now())
  comments  Comment[]
}

model Comment {
  id         String   @id @default(uuid())
  comment    String?
  commentImg String?
  author     User     @relation(fields: [authorId], references: [id])
  authorId   String
  post       Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId     String
  createdAt  DateTime @default(now())
}

model FriendRequest {
  id         String   @id @default(uuid())
  to         User     @relation("to", fields: [toUserId], references: [id])
  toUserId   String
  from       User     @relation("from", fields: [fromUserId], references: [id])
  fromUserId String
  sentAt     DateTime @default(now())
}
